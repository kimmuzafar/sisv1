<?php

namespace Wit\ModelBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
	public function findAll()
	{
		return $this->findBy(array(), array('id' => 'DESC'));
	}

	public function findAllActive()
	{
		return $this->getEntityManager()->createQuery('SELECT a FROM ModelBundle:Albumphoto a WHERE a.status=1 ORDER BY a.id DESC')->getResult();
	}

	# returns all applications for given user..
	public function findUserApplications($user) // param: user instance
	{
		return $this->getEntityManager()->getRepository('ModelBundle:Application')->findBy(array("user"=>$user), array('id' => 'DESC'));
	}

	/*
		Returns:
		closed 		= admission is closed, redirect user to admission closed page.
		application = user already submitted application for current schedule, so return application object.
		submit 		= user has not submitted an application yet against this schedule, so he can submit it
	*/
	public function findUserApplicationInCurrentSchedule($onlineUser){
        
		$em = $this->getEntityManager();

		/*
		    Check if admission is open
		    This will actually check in Admission Scheduler if any scheduler found open at time moment, user can submit an application
		    this will return current open schedule (returned open schedule should be 1 only..)
		*/
		$admissionSchedules = $em->createQuery("SELECT a FROM ModelBundle:AdmissionScheduler a WHERE a.isOpen=1 AND :currenttime BETWEEN a.startDate AND a.endDate")->setParameter('currenttime', date('Y-m-d h:i:s'))->setMaxResults(1)->getOneOrNullResult();

		if ($admissionSchedules){ //admission is open, because an schedule is marked as open
		    /* 
		        each user is allowed to submit an application against each schedule
		        each schedule will accept no more than 1 application from each user
		        i-g:
		        schedule1 can have 1 application from user1
		        user1 cannot submit another application to schedule1
		        user1 can submit more than one application but schedule1 accepts 1 application, schedule2 accepts 1 application and so on
		    */

		    # user application in current open schedule
		    $applicationInCurrentSchedule = null;

		    # because user can have multiple applications in different schedules we need check
		    # if user has an application in current schedule if yes he cannot submit application again..
		    foreach ($onlineUser->getApplications() as $application) {

		        # Checking if application exist in current schedule
		        # If exist user won't be able to submit another application in current schedule
		        # because each schedule accept one application / user
		        if( $application->getAdmissionScheduler()->getId() == $admissionSchedules->getId() ){
		            $applicationInCurrentSchedule = $application;
		        }else{
		            $applicationInCurrentSchedule = false;
		        }
		    }

		    # if application exist in current schedule user should not be allowed to submit another application even if admission is open for this schedule
		    if( $applicationInCurrentSchedule ){
		        $userApplication = $applicationInCurrentSchedule;
		    }
		    # user can submit application as he/she don't have any application in current schedule and admission is also open
		    else{
		        $userApplication = "submit";
		    }

		    // return array(
		    //     'application' => $userApplication,
		    // );

		    return $userApplication;
		    
		}else{
		    //admission is closed..
		    //return $this->render('UserBundle:Application:admissionclosed.html.twig');
		    return "closed";
		}

    }
}